import type { NextPage, GetServerSideProps } from 'next';
import Head from 'next/head';
import Layout from 'components/Layouts/AppLayout';
import Image from 'next/image';
import { List } from 'tabler-icons-react';

export const getServerSideProps: GetServerSideProps = async () => {
  const api = process.env.NEXT_PUBLIC_URL_API;
  const categories: any[] = [];

  try {
    const categoryRes = await fetch(`${api}/home`);
    const categoryData = await categoryRes.json();
    if (categoryData.ok) {
      categories.push(...categoryData.categories);
    }
  } catch (error) {
    // eslint-disable-next-line no-console
    console.log(error);
  }

  return {
    props: {
      categories,
    },
  };
};

interface Props {
  categories: any[];
}

const Home: NextPage<Props> = ({ categories }: Props) => (
  <Layout title="Home">
    <div>
      <Head>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <h2 className="mx-auto mb-20 mt-10 w-10/12 rounded-md bg-gray-dark py-2 px-4 text-center font-display text-2xl font-normal text-light shadow-light-neon">
        Carta digital
      </h2>

      {categories.map((item) =>
        item.products ? (
          <section key={item.id}>
            <header className="relative bg-gray-400 p-4 text-gray-100">
              <h3 className="mb-1 text-xl font-black">{item.name}</h3>
              <p className="text-sm"> {item.description} </p>
            </header>
            <div className="bg-gray-100">
              {item.products.map((product: any) => (
                <div className="product relative grid grid-cols-auto-fr gap-2 border-b border-gray-500 pt-8 pb-4 pr-4 pl-2">
                  <figure className="product__fig  relative z-0 m-0 h-24 w-24 overflow-hidden rounded-lg border border-gray-500">
                    <Image src={product.image.url} alt={product.name} layout="fill" />
                  </figure>
                  <div className="text-dark">
                    <h4 className="mb-1 border-b-4 border-double border-gray-400 font-display text-sm font-normal">
                      {product.name}
                    </h4>
                    <p className="product__description w-full text-xs">{product.description}</p>
                    <p className="text-sm font-black tracking-widest text-gray-dark">{product.price}</p>
                    {!!product?.optionSets?.length && (
                      <div className="flex justify-start">
                        <div className="relative -left-4 scale-75 transform rounded border border-green-900 bg-green-800 p-1 text-xs font-black tracking-widest text-light shadow-new-tag">
                          {' '}
                          <List size={16} className="inline-block" /> Tiene opciones.{' '}
                        </div>
                      </div>
                    )}
                  </div>
                  {product.isNew && (
                    <div className="absolute top-2 right-2 scale-75 transform rounded border border-red-700 bg-red-600 p-1 text-xs font-black tracking-widest text-light shadow-new-tag">
                      New
                    </div>
                  )}
                </div>
              ))}
            </div>
          </section>
        ) : null
      )}
    </div>
  </Layout>
);
export default Home;
